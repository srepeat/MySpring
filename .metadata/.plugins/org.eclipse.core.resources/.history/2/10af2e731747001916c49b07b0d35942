package com.atguigu.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Scope;

import com.atguigu.bean.Person;

@Configuration //使用配置的方式加载bean
public class MyConfig {
	/**
	 * scope域的作用范围
	 * ConfigurableBeanFactory#SCOPE_PROTOTYPE  prototype
	 * ConfigurableBeanFactory#SCOPE_SINGLETON  singleton
	 * prototype : 在每次调用的时候会才创建
	 *             在每一次调用都会去获取一个新的容器，每次获取到的地址都不一样
	 * singleton : 默认域的作用范围(每次获取执行都是同一个容器)
	 *             在执行第一次的时间就创建ioc容器，使用的时候(map.get())获取   
	 * 懒加载            
	 *     单例bean==>默认在容器启动创建bean,(单例只会被创建一次，多例就相反) 
	 *     懒加载==>容器启动不创建对象，第一次使用获取bean创建对象==>懒加载表明需要采取加载，不需要就不管            
	 * @return
	 */
	//@Scope("prototype")
	@Lazy
	@Bean("person")
	public Person person() {
		System.out.println("ioc容器创建了........");
		return new Person("王五", 10);
	}
}
